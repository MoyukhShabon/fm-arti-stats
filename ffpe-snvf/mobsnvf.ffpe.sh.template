#!/bin/bash

set -euo pipefail

bam_path=$1
vcf_path=$2
ref=$3
outdir=$4

vcf_name=$(basename $vcf_path)
sample_name=${vcf_name%%.*}

# outdir="${root_outdir}"
mkdir -p $outdir
echo -e $outdir

bam=$(echo -n ${bam_path})
if [[ ! -f $bam ]]; then
	echo "${bam_path} not found" >&2
	exit 2
fi

vcf=$(echo -n ${vcf_path})
if [[ ! -f $vcf ]]; then
	echo "${vcf_path} not found." >&2
	exit 2
fi

echo "inputs:" >&2
echo "  $bam" >&2
echo "  $vcf" >&2

hts-mobsnvf quantify -M freq -t ffpe -f $ref -b $bam -J $outdir/${sample_name}.obquant.json
phi=$(grep phi $outdir/${sample_name}.obquant.json | sed -E 's/.*"phi":.([0-9.e+-]+),?/\1/')

# The -v flag is verbosity. Not defined in the help file. Setting -v to 0 disables verbose outputs
# bash cannot do floating point comparison, so we do regex match
if [[ $phi =~ 0\.0+[eE]\+00  ]] ; then
	# estimated damage is 0; try filtering anyway with unknown phi
	echo "Estimated damage is 0; filtering with unknown phi"
	hts-mobsnvf identify -M freq -t ffpe -b $bam -V $vcf -g 0 -v 0 \
		-o $outdir/${sample_name}.mobsnvf.ffpe.snv
else
	echo "Estimated damage is $phi; filtering with fixed phi"
	hts-mobsnvf identify -M freq -t ffpe -b $bam -V $vcf -g 0 -v 0 \
		--phi $phi --fixed-phi -o $outdir/${sample_name}.mobsnvf.ffpe.snv
fi

echo "Finished FFPE SNVF filtering $vcf_name"
echo -e "\tOutput saved to: $outdir/${sample_name}.mobsnvf.ffpe.snv"
